#%RAML 1.0
title: sys-employee-api

# baseUri: http://localhost:8081/api

description: this is a system api which does a crud operation on snowflake database

types:
  CreateEmployeeRequest : !include dataTypes/requests/createEmployeeRequest.raml
  GetEmployeeResponse: !include dataTypes/responses/getEmployeeResponse.raml

/employees:
  post:
    body:
      application/json: CreateEmployeeRequest

    responses:
      201:
        body:
          application/json:
            type: object
            properties:
              statusCode:
                required: true
                type: number
                example: 201
              message:
                required: true
                type: string
                example: "employee datails created"
              transactionId:
                required: true
                type: string
                example: "48n32920-69ne-47b4-907d-fa15869f3c4d"
            example:
              {
                "statusCode": 201,
                "message":"Employee details created",
                "transactionId":"48n32920-69ne-47b4-907d-fa15869f3c4d"
              }

  get:
    queryParameters:
      ID:
        required: false
        type: string
        example: "JS-23-01"
      firstName:
        type: string
        required: false
        example: "John"
      email:
        required: false
        type: string
        example: "john.smith@abc.com"
      department:
        required: false
        type: string
        enum: [TR,MR,HR,SR,AR,IR,PR]
    responses:
      200:
        body:
          application/json:
            type: GetEmployeeResponse

  put:
    body:
      application/json:
        type: 
    responses:
      200:
        body:
          application/json:
            type: object
            properties:
              statusCode:
                required: true
                type: number
                example: 200
              message:
                required: true
                type: string
                example: "employee details updated"
              transactionId:
                required: true
                type: string
                example: "48n32920-69ne-47b4-907d-fa15869f3c4d"
            example:
              {
                "statusCode": 200,
                "message":"Employee details updated",
                "transactionId":"48n32920-69ne-47b4-907d-fa15869f3c4d"
              }
      # 503:
      #   body:
      #     application/json:
      #       type: object
      #       properties:
      #         statusCode:
      #           required: true
      #           type: number
      #           example: 503
      #         message:
      #           required: true
      #           type: string
      #           example: "Service unavailable"
      #         description:
      #           type: string
      #           required: true
      #           example: "The (upstream) service is temporarily not available"  
      #         transactionId:
      #           required: true
      #           type: string
      #           example: "48n32920-69ne-47b4-907d-fa15869f3c4d"
      #       example:
      #         {
      #           "statusCode": 503,
      #           "message":"Service unavailable",
      #           "description":"The (upstream) service is temporarily not available",
      #           "transactionId":"48n32920-69ne-47b4-907d-fa15869f3c4d"
      #         }
      # 500:
      #   body:
      #     application/json:
      #       type: object
      #       properties:
      #         statusCode:
      #           required: true
      #           type: number
      #           example: 500
      #         message:
      #           required: true
      #           type: string
      #           example: "Internal server error"
      #         description:
      #           type: string
      #           required: true
      #           example: "The server encountered an unexpected condition"  
      #         transactionId:
      #           required: true
      #           type: string
      #           example: "48n32920-69ne-47b4-907d-fa15869f3c4d"
      #       example:
      #         {
      #           "statusCode": 500,
      #           "message":"Internal server error",
      #           "description":"The server encountered an unexpected condition",
      #           "transactionId":"48n32920-69ne-47b4-907d-fa15869f3c4d"
      #         }

  /{ID}:
    delete:
      responses:
        200:
          body:
            application/json:
              type: object
              properties:
                statusCode:
                  required: true
                  type: number
                  example: 200
                message:
                  required: true
                  type: string
                  example: "employee details updated"
                transactionId:
                  required: true
                  type: string
                  example: "48n32920-69ne-47b4-907d-fa15869f3c4d"
              example:
                {
                  "statusCode": 200,
                  "message":"Employee details updated",
                  "transactionId":"48n32920-69ne-47b4-907d-fa15869f3c4d"
                }
        503:
          body:
            application/json:
              type: object
              properties:
                statusCode:
                  required: true
                  type: number
                  example: 503
                message:
                  required: true
                  type: string
                  example: "Service unavailable"
                description:
                  type: string
                  required: true
                  example: "The (upstream) service is temporarily not available"  
                transactionId:
                  required: true
                  type: string
                  example: "48n32920-69ne-47b4-907d-fa15869f3c4d"
              example:
                {
                  "statusCode": 503,
                  "message":"Service unavailable",
                  "description":"The (upstream) service is temporarily not available",
                  "transactionId":"48n32920-69ne-47b4-907d-fa15869f3c4d"
                }
        500:
          body:
            application/json:
              type: object
              properties:
                statusCode:
                  required: true
                  type: number
                  example: 500
                message:
                  required: true
                  type: string
                  example: "Internal server error"
                description:
                  type: string
                  required: true
                  example: "The server encountered an unexpected condition"  
                transactionId:
                  required: true
                  type: string
                  example: "48n32920-69ne-47b4-907d-fa15869f3c4d"
              example:
                {
                  "statusCode": 500,
                  "message":"Internal server error",
                  "description":"The server encountered an unexpected condition",
                  "transactionId":"48n32920-69ne-47b4-907d-fa15869f3c4d"
                } 